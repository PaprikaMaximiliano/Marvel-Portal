{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/UseMarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","offSet","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","console","log","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","includes","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemsLoading","setNewItemsLoading","offset","setOffset","charsEnded","setCharsEnded","onRequest","window","addEventListener","loadMore","removeEventListener","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","initial","onCharListLoaded","newCharList","logger","secondLog","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyDown","e","key","renderItems","obj","catch","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/5.0f69fc14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img\r\n            style={{\r\n                display: 'block',\r\n                width: '250px',\r\n                height: '250px',\r\n                objectFit: 'contain',\r\n                margin: '0 auto'\r\n            }}\r\n            src={img}\r\n            alt=\"Error\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const { loading, request, error, clearError } = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey =\n        'ts=1&apikey=8229e073f486c74dcfc68279f3ef40be&hash=921d2f6212f917bb3b605612c467e8a1';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offSet = _baseOffset) => {\n        const res = await request(\n            `${_apiBase}characters?limit=9&offset=${offSet}&${_apiKey}`\n        );\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    };\n\n    const getAllComics = async (offSet = 0) => {\n        const res = await request(\n            `${_apiBase}comics?limit=8&offset=${offSet}&${_apiKey}`\n        );\n        return res.data.results.map(_transformComics);\n    };\n\n    const getComic = async (id) => {\n        const res = await request(\n            `${_apiBase}comics/${id}?&${_apiKey}`\n        );\n        console.log(_transformComics(res.data.results[0]))\n        return _transformComics(res.data.results[0])\n    };\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description\n                ? `${char.description.slice(0, 210)}...`\n                : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        };\n    };\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount\n                ? `${comics.pageCount} p.`\n                : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects[0]?.language || 'en-us',\n            price: comics.prices[0].price\n                ? `${comics.prices[0].price}`\n                : 'not available',\n        };\n    };\n\n    return {\n        loading,\n        error,\n        getAllCharacters,\n        getCharacter,\n        getAllComics,\n        getComic,\n        clearError,\n    };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(\n        async (\n            url,\n            method = 'GET',\n            body = null,\n            headers = { 'Content-Type': 'application/json' }\n        ) => {\n            setLoading(true);\n\n            try {\n                const response = await fetch(url, { method, body, headers });\n                if (!response.ok) {\n                    throw new Error(\n                        `Could not fetch ${url}, status ${response.status}`\n                    );\n                }\n\n                const data = await response.json();\n                setLoading(false);\n                return data;\n            } catch (e) {\n                setLoading(false);\n                setError(e.message);\n                throw e;\n            }\n        },\n        []\n    );\n\n    const clearError = useCallback(() => {\n        setError(null);\n    },[])\n\n    return {loading,request,error,clearError}\n};\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/UseMarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id).then(onCharLoaded);\n    };\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!\n                    <br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">Or choose another one</p>\n                <button className=\"button button__main\">\n                    <div onClick={updateChar} className=\"inner\">\n                        try it\n                    </div>\n                </button>\n                <img\n                    src={mjolnir}\n                    alt=\"mjolnir\"\n                    className=\"randomchar__decoration\"\n                />\n            </div>\n        </div>\n    );\n};\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n    let imgStyle = { objectFit: 'cover' };\n    if (thumbnail.includes('image_not_available.jpg')) {\n        // if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle = { objectFit: 'contain' };\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img\n                src={thumbnail}\n                alt=\"Random character\"\n                className=\"randomchar__img\"\n                style={imgStyle}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;\n","import './charList.scss';\nimport useMarvelService from '../../services/UseMarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charsEnded, setCharsEnded] = useState(false);\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        window.addEventListener('scroll', loadMore);\n\n        return () => {\n            window.removeEventListener('scroll', loadMore);\n        };\n    }, []);\n\n    const loadMore = () => {\n        if (\n            window.innerHeight + document.documentElement.scrollTop >\n            document.scrollingElement.scrollHeight\n        ) {\n            // this.onRequest(this.state.offset);\n        }\n    };\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n        getAllCharacters(offset).then(onCharListLoaded);\n    };\n\n    const onCharListLoaded = async  (newCharList) => {\n        const {logger, secondLog} = await import('./someFunc')\n\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList((charList) => [...charList, ...newCharList]);\n        setNewItemsLoading(false);\n        setOffset((offset) => offset + 9);\n        setCharsEnded(ended);\n    };\n\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach((item) =>\n            item.classList.remove('char__item_selected')\n        );\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    };\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            let imgStyle = { objectFit: 'cover' };\n            if (\n                item.thumbnail ===\n                'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n            ) {\n                imgStyle = { objectFit: 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={(el) => (itemRefs.current[i] = el)}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}\n                >\n                    <img\n                        src={item.thumbnail}\n                        alt={item.name}\n                        style={imgStyle}\n                    />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            );\n        });\n\n        return <ul className=\"char__grid\">{items}</ul>;\n    };\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemsLoading ? <Spinner /> : null;\n\n    if(loading){\n        import('./someFunc')\n            .then(obj => obj.logger())\n            .catch()\n    }\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemsLoading}\n                style={{ display: charsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n};\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/UseMarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId]);\n\n    const updateChar = () => {\n        const { charId } = props;\n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId).then(onCharLoaded);\n    };\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    );\n};\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { objectFit: 'cover' };\n    if (thumbnail.includes('image_not_available.jpg')) {\n        imgStyle = { objectFit: 'contain' };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0\n                    ? null\n                    : 'There is no comics with this character'}\n                {comics.slice(0, 10).map((item, i) => {\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nCharInfo.propTypes = {\n    charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from 'react';\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nclass ErrorBoundary extends Component {\n    state = {\n        error: false,\n    };\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true,\n        });\n    }\n\n    render(){\n        if(this.state.error){\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\n\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    };\n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar />\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected} />\n                </ErrorBoundary>\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar} />\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </>\n    );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}